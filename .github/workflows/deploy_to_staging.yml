name: Deploy TO Staging
'on':
  push:
    branches:
      - staging
permissions:
  id-token: write
  contents: read
jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (to provide access to our code)
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: 'arn:aws:iam::979176640062:role/github-action-role'
          aws-region: ap-south-1
          mask-aws-account-id: 'false'
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Install Serverless Framework
        run: npm install -g serverless
      - name: Install Serverless Compose
        run: npm install -g @serverless/compose
      - name: Install Serverless Python Requirements Plugin
        run: npm install -g serverless-python-requirements
      - name: Install serverless plugins
        run: npm install serverless-offline -g
      - name: Create env file
        run: |
          cat > env.yml << EOF
          ${{ vars.ENV }}
          EOF
      - name: Create env file for secrets
        run: |
          cat > env_secrets.yml << EOF
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY_STAGING }}
          SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_JWT_SECRET_STAGING }}
          EOF
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: '${{ vars.DOCKERHUB_USERNAME }}'
          password: '${{ secrets.DOCKERHUB_TOKEN }}'
      - name: Build Docker image
        run: |
          docker build -t ${{ vars.DOCKER_USERNAME }}/initialSetup:latest .
      - name: Push Docker image
        run: |
          docker push ${{ vars.DOCKER_USERNAME }}/initialSetup:latest
      - name: Deploy Lambda functions
        run: sls deploy --stage staging
        env:
          AWS_REGION: ap-south-1
