name: Deploy TO Staging
'on':
  push:
    branches:
      - staging
      
permissions:
  id-token: write
  contents: read
  
jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout (to provide access to our code)
        uses: actions/checkout@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: 'arn:aws:iam::979176640062:role/github-action-role'
          aws-region: ${{vars.AWS_REGION}}
          mask-aws-account-id: 'false'
          
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
          
      - name: Install Serverless Framework
        run: npm install -g serverless
        
      - name: Install Serverless Compose
        run: npm install -g @serverless/compose
        
      - name: Install Serverless Python Requirements Plugin
        run: npm install -g serverless-python-requirements
        
      - name: Install serverless plugins
        run: npm install serverless-offline -g
        
      - name: Create env file
        run: |
          cat > env.yml << EOF
          AWS_REGION: ${{ vars.AWS_REGION }}
          EOF
          
      - name: Create env file for secrets
        run: |
          cat > env_secrets.yml << EOF
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          EOF

      
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Log in to AWS ECR
        run: |
          aws ecr get-login-password --region ${{vars.AWS_REGION}} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{vars.AWS_REGION}}.amazonaws.com
          
      - name: Build Docker image 
        run: |
          docker build -t initialsetup_for_test:latest .

      - name: Tag Docker image for ECR
        run: |
          docker tag initialsetup_for_test:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/intialsetup:latest
          
      - name: Push Docker image to AWS ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/intialsetup:latest   
          
      - name: Deploy Lambda functions
        run: sls deploy --stage staging
        env:
          AWS_REGION: ${{vars.AWS_REGION}}
