{
  "unknown": {
    "versionSfCore": null,
    "versionFramework": "4.4.18",
    "isWithinCompose": false,
    "composeOrgName": null,
    "composeServiceName": null,
    "command": [],
    "options": {},
    "error": {
      "message": "Cannot parse \"serverless.yml\": unidentified alias \".pyc\" in \"/Users/amit/Desktop/Work/db/initial_setup/serverless.yml\" (33:12)\n\n 30 |     - .DS_Store\n 31 |     - .env\n 32 |     - __pycache__/**\n 33 |     - *.pyc\n-----------------^\n 34 |     - .git/**\n 35 |     - myenv/**",
      "stack": "ServerlessError2: Cannot parse \"serverless.yml\": unidentified alias \".pyc\" in \"/Users/amit/Desktop/Work/db/initial_setup/serverless.yml\" (33:12)\n\n 30 |     - .DS_Store\n 31 |     - .env\n 32 |     - __pycache__/**\n 33 |     - *.pyc\n-----------------^\n 34 |     - .git/**\n 35 |     - myenv/**\n    at parseConfigurationFile (file:///Users/amit/.serverless/releases/4.4.18/package/dist/sf-core.js:287:4962)\n    at async read_default (file:///Users/amit/.serverless/releases/4.4.18/package/dist/sf-core.js:287:6337)\n    at async routeExistingService (file:///Users/amit/.serverless/releases/4.4.18/package/dist/sf-core.js:953:5259)\n    at async commandOnboarding (file:///Users/amit/.serverless/releases/4.4.18/package/dist/sf-core.js:951:2192)\n    at async catchAllHandler (file:///Users/amit/.serverless/releases/4.4.18/package/dist/sf-core.js:976:19795)\n    at async runCommand (file:///Users/amit/.serverless/releases/4.4.18/package/dist/sf-core.js:1010:10875)\n    at async route (file:///Users/amit/.serverless/releases/4.4.18/package/dist/sf-core.js:1010:13424)\n    at async Object.run2 [as run] (file:///Users/amit/.serverless/releases/4.4.18/package/dist/sf-core.js:1010:15173)\n    at async run3 (file:///Users/amit/.serverless/releases/4.4.18/package/dist/sf-core.js:1010:16435)",
      "code": "CONFIGURATION_PARSE_ERROR"
    },
    "machineId": "90bcaacb622e6e7080d91aeb0cb7a1ec",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  },
  "/Users/amit/Desktop/Work/db/initial_setup": {
    "versionSfCore": null,
    "versionFramework": "4.4.18",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeServiceName": null,
    "servicePath": "/Users/amit/Desktop/Work/db/initial_setup",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "amitnurturev",
      "service": "initial-setup",
      "custom": {
        "pythonRequirements": {
          "dockerizePip": true
        },
        "defaultStage": "staging",
        "environment": "${file(./env.yml):staging}",
        "secrets": "<REDACTED>",
        "region": "ap-south-1"
      },
      "provider": {
        "name": "aws",
        "stage": "staging",
        "environment": {
          "SUPABASE_KEY": "${self:custom.secrets.SUPABASE_KEY}",
          "SUPABASE_URL": "${self:custom.secrets.SUPABASE_URL}"
        },
        "runtime": "python3.9",
        "region": "ap-south-1"
      },
      "ecr": {
        "images": {
          "latest": {
            "path": "./",
            "file": "./Dockerfile"
          }
        }
      },
      "package": {
        "exclude": [
          ".DS_Store",
          ".env",
          "__pycache__/**",
          ".git/**",
          "myenv/**",
          ".gitignore",
          ".serverless/**"
        ],
        "include": [
          "./constants/**",
          "./domains/**",
          "./infrastructure/**",
          "./utils/**",
          "./Dockerfile"
        ]
      },
      "functions": {
        "initialsetup": {
          "image": {
            "name": "ap-south-1.dkr.ecr.ap-south-1.amazonaws.com/test:latest"
          }
        }
      },
      "plugins": [
        "serverless-python-requirements",
        "serverless-offline"
      ]
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: amitnurturev\nservice: initial-setup\n\ncustom:\n  pythonRequirements:\n    dockerizePip: true\n  defaultStage: staging\n  environment: '${file(./env.yml):staging}'\n  secrets: '${file(./env_secrets.yml)}'\n  region: ${env:AWS_REGION, 'ap-south-1'}\n\nprovider:\n  name: aws\n  stage: '${opt:stage, self:custom.defaultStage}'\n  environment:\n    SUPABASE_KEY: '${self:custom.secrets.SUPABASE_KEY}'\n    SUPABASE_URL: '${self:custom.secrets.SUPABASE_URL}'\n  runtime: python3.9\n  region: ap-south-1\n\necr:\n  images:\n    latest:\n      path: ./\n      file: ./Dockerfile\n\npackage:\n  exclude:\n    - .DS_Store\n    - .env\n    - __pycache__/**\n    - .git/**\n    - myenv/**\n    - .gitignore\n    - .serverless/**\n  include:\n    - ./constants/**\n    - ./domains/**\n    - ./infrastructure/**\n    - ./utils/**\n    - ./Dockerfile\n\nfunctions:\n  initialsetup:\n    image:\n      name: >-\n        ${self:provider.region}.dkr.ecr.ap-south-1.amazonaws.com/test:latest\n\nplugins:\n  - serverless-python-requirements\n  - serverless-offline\n",
    "command": [
      "deploy"
    ],
    "options": {
      "stage": "staging"
    },
    "error": {
      "message": "Cannot resolve '${file(./env.yml):staging}' variable at 'custom.environment'. No value is available for this variable, and no default value was provided. Please check your variable definitions or provide a default value.",
      "stack": "Error: Cannot resolve '${file(./env.yml):staging}' variable at 'custom.environment'. No value is available for this variable, and no default value was provided. Please check your variable definitions or provide a default value.\n    at _ResolverManager.resolve (file:///Users/amit/.serverless/releases/4.4.18/package/dist/sf-core.js:693:57587)\n    at async #handlePlaceholderNode (file:///Users/amit/.serverless/releases/4.4.18/package/dist/sf-core.js:693:55959)\n    at async file:///Users/amit/.serverless/releases/4.4.18/package/dist/sf-core.js:693:53887\n    at async processNodeAndHandleCompletion (file:///Users/amit/.serverless/releases/4.4.18/package/dist/sf-core.js:693:44836)",
      "code": "MISSING_VARIABLE_RESULT"
    },
    "machineId": "90bcaacb622e6e7080d91aeb0cb7a1ec",
    "stage": "staging",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "4ce8e8e6-b0e4-43b2-9d1b-5a53311ceac6",
    "orgName": "amitnurturev",
    "userId": "Jl0zBmLVV9H3GXszwp",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "amitnurturev",
    "subscription": null,
    "userEmail": "amit.kumar@nurturev.com",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}